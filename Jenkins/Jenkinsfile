pipeline {
    agent any
    
    parameters {
        choice(
            name: 'BROWSER',
            choices: ['chrome', 'firefox'],
            description: 'Select browser for test execution'
        )
        string(
            name: 'TEST_TAGS',
            defaultValue: '@ui',
            description: 'Cucumber tags to filter tests (e.g., @smoke, @regression, @api)'
        )
        choice(
            name: 'THREAD_COUNT',
            choices: ['1', '2', '4', '8'],
            description: 'Number of parallel threads for test execution'
        )
        choice(
            name: 'EXECUTION_MODE',
            choices: ['parallel', 'sequential'],
            description: 'Test execution mode'
        )
    }
    
    environment {
        WORKSPACE_DIR = '/workspace'
        // Convert execution mode to boolean for Maven
        PARALLEL_EXECUTION = "${params.EXECUTION_MODE == 'parallel' ? 'true' : 'false'}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Start Selenium Grid') {
            steps {
                script {
                    // Navigate to root directory and start Selenium Grid services
                    dir('.') {
                        sh 'docker-compose up -d selenium-hub chrome firefox'
                        
                        // Wait for Selenium Grid to be ready
                        sh 'sleep 30'
                        
                        // Check if Selenium Grid is running
                        sh 'curl -f http://localhost:4444/wd/hub/status || exit 1'
                    }
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                script {
                    // Navigate to root directory and run tests with parameters
                    dir('.') {
                        // Run tests with selected parameters
                        sh """
                            docker-compose run --rm \
                                -e BROWSER=${params.BROWSER} \
                                -e TEST_TAGS='${params.TEST_TAGS}' \
                                -e THREAD_COUNT=${params.THREAD_COUNT} \
                                -e PARALLEL_EXECUTION=${env.PARALLEL_EXECUTION} \
                                test-runner
                        """
                    }
                }
            }
        }
        
        stage('Collect Test Results') {
            steps {
                script {
                    // Publish test results using junit step
                    junit '**/target/surefire-reports/*.xml'
                    
                    // Publish Extent Reports if available
                    publishHTML([
                        allowMissing: true,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'target/extent-reports',
                        reportFiles: 'index.html',
                        reportName: 'Extent Test Report'
                    ])
                }
            }
        }
        
        stage('Cleanup') {
            steps {
                script {
                    // Navigate to root directory and stop all services
                    dir('.') {
                        sh 'docker-compose down'
                    }
                }
            }
        }
    }
    
    post {
        always {
            // Always publish test results using junit step
            junit '**/target/surefire-reports/*.xml'
            
            // Clean workspace
            cleanWs()
        }
        
        success {
            echo 'Pipeline executed successfully!'
        }
        
        failure {
            echo 'Pipeline failed!'
        }
        
        aborted {
            echo 'Pipeline was aborted!'
        }
    }
}
